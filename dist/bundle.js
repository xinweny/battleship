(()=>{var t={21:(t,e,n)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=n(883),a=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=[];for(var e=0;e<100;e+=1)this.board.push({ship:null,isShot:!1});this.ships={carrier:new i(5,"carrier"),battleship:new i(4,"battleship"),cruiser:new i(3,"cruiser"),submarine:new i(3,"submarine"),patrolBoat:new i(2,"patrolBoat")},this.misses=[]}var e,n;return e=t,(n=[{key:"placeShip",value:function(t,e,n){for(var r=this.ships[t],o=0;o<r.length;o+=1){var i="x"===n?e+o:e+10*o;if(i>=100||null!=this.board[i].ship)return!1;this.board[i].ship=r.name}return!0}},{key:"isShotHit",value:function(t){return this.board[t].isShot&&null!=this.board[t].ship}},{key:"receiveAttack",value:function(t){if(!this.board[t].isShot){this.board[t].isShot=!0;var e=this.board[t].ship;e?this.ships[e].hit():this.misses.push(t)}}},{key:"shipAt",value:function(t){return this.ships[this.board[t].ship]}},{key:"shipsSunk",value:function(){var t=this,e=0;return Object.keys(this.ships).forEach((function(n){t.ships[n].isSunk()&&(e+=1)})),e}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=a},779:(t,e,n)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=n(21),a=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=new i,this.ships=this.board.ships,this.name=e?"p2":"p1",e&&(this.AI=e)}var e,n;return e=t,(n=[{key:"fireShot",value:function(t,e){t.board.receiveAttack(e)}},{key:"getCell",value:function(t){return this.board.board[t]}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=a},883:t=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.length=e,this.name=n,this.hits=0,this.sunk=!1}var e,r;return e=t,(r=[{key:"hit",value:function(){this.hits+=1,this.hits===this.length&&(this.sunk=!0)}},{key:"isSunk",value:function(){return this.sunk}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},151:t=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function r(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var o=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,o;return e=t,(o=[{key:"randomShot",value:function(t){var e=t.board,n=e.board.filter((function(t){return!t.isShot})).map((function(t){return e.board.indexOf(t)})),r=n[Math.floor(Math.random()*n.length)];return e.receiveAttack(r),r}},{key:"placeShips",value:function(){var t,e=this,r=["x","y"],o=function(t){if(Array.isArray(t))return n(t)}(t=Array(100).keys())||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();Object.keys(this.ships).forEach((function(t){for(var n=!1;!n;){var i=o[Math.floor(Math.random()*o.length)],a=r[Math.floor(Math.random()*r.length)];e.board.placeShip(t,i,a)&&(n=!0)}}))}}])&&r(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=o},193:t=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.elements={p1Board:document.getElementById("p1-board"),p2Board:document.getElementById("p2-board")}}var e,r;return e=t,(r=[{key:"createElement",value:function(t,e){var n=document.createElement(t);return n.className=e,n}},{key:"renderBoard",value:function(t){for(var e=document.getElementById("".concat(t.name,"-board")),n=t.board.board,r=0;r<100;r+=1){var o=this.createElement("div","cell");o.setAttribute("data-index",r),n[r].ship&&n[r].isShot?o.style.backgroundColor="red":n[r].ship&&"p1"===t.name&&(o.style.backgroundColor="gray"),e.appendChild(o)}}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.exports=r},411:(t,e,n)=>{"use strict";n.d(e,{Z:()=>u});var r=n(537),o=n.n(r),i=n(645),a=n.n(i),s=n(3),c=a()(o());c.i(s.Z),c.push([t.id,"#game-window {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-around;\n\tflex-wrap: wrap;\n}","",{version:3,sources:["webpack://./src/styles/components/body.css"],names:[],mappings:"AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,6BAA6B;CAC7B,eAAe;AAChB",sourcesContent:["@import './game-board.css';\n\n#game-window {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-around;\n\tflex-wrap: wrap;\n}"],sourceRoot:""}]);const u=c},760:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,"#footer {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 8px;\n}\n\n#github-logo {\n\twidth: 25px;\n\theight: 25px;\n}\n\n#footer > p > a {\n\tfont-weight: bold;\n}","",{version:3,sources:["webpack://./src/styles/components/footer.css"],names:[],mappings:"AAAA;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,QAAQ;AACT;;AAEA;CACC,WAAW;CACX,YAAY;AACb;;AAEA;CACC,iBAAiB;AAClB",sourcesContent:["#footer {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 8px;\n}\n\n#github-logo {\n\twidth: 25px;\n\theight: 25px;\n}\n\n#footer > p > a {\n\tfont-weight: bold;\n}"],sourceRoot:""}]);const s=a},3:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,".game-board {\n\tdisplay: grid;\n\tgrid-template-rows: repeat(10, 1fr);\n\tgrid-template-columns: repeat(10, 1fr);\n\tborder: 0.5px solid black;\n}\n\n#game-window h2 {\n\ttext-align: center;\n}\n\n.cell {\n\twidth: 30px;\n\theight: 30px;\n\tborder: 0.5px solid black;\n\tbackground-color: white;\n}","",{version:3,sources:["webpack://./src/styles/components/game-board.css"],names:[],mappings:"AAAA;CACC,aAAa;CACb,mCAAmC;CACnC,sCAAsC;CACtC,yBAAyB;AAC1B;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,yBAAyB;CACzB,uBAAuB;AACxB",sourcesContent:[".game-board {\n\tdisplay: grid;\n\tgrid-template-rows: repeat(10, 1fr);\n\tgrid-template-columns: repeat(10, 1fr);\n\tborder: 0.5px solid black;\n}\n\n#game-window h2 {\n\ttext-align: center;\n}\n\n.cell {\n\twidth: 30px;\n\theight: 30px;\n\tborder: 0.5px solid black;\n\tbackground-color: white;\n}"],sourceRoot:""}]);const s=a},637:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=a},756:(t,e,n)=>{"use strict";n.d(e,{Z:()=>p});var r=n(537),o=n.n(r),i=n(645),a=n.n(i),s=n(637),c=n(411),u=n(760),l=a()(o());l.i(s.Z),l.i(c.Z),l.i(u.Z),l.push([t.id,"* {\n\tpadding: 0;\n\tmargin: 0;\n}\n\na {\n\ttext-decoration: none;\n}\n\nbody {\n\theight: 100vh;\n\twidth: 100vw;\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAIA;CACC,UAAU;CACV,SAAS;AACV;;AAEA;CACC,qBAAqB;AACtB;;AAEA;CACC,aAAa;CACb,YAAY;AACb",sourcesContent:["@import './components/header.css';\n@import './components/body.css';\n@import './components/footer.css';\n\n* {\n\tpadding: 0;\n\tmargin: 0;\n}\n\na {\n\ttext-decoration: none;\n}\n\nbody {\n\theight: 100vh;\n\twidth: 100vw;\n}"],sourceRoot:""}]);const p=l},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<t.length;u++){var l=[].concat(t[u]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],u=r.base?c[0]+r.base:c[0],l=i[u]||0,p="".concat(u," ").concat(l);i[u]=l+1;var f=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)e[f].references++,e[f].updater(h);else{var y=o(h,r);r.byIndex=s,e.splice(s,0,{identifier:p,updater:y,references:1})}a.push(p)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var c=r(t,o),u=0;u<i.length;u++){var l=n(i[u]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(779),e=n.n(t),r=n(151),o=n.n(r),i=n(193),a=n.n(i);function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}const u=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.p1=new(e()),this.p2=new(e())(new(o())),this.view=new(a()),this.turn="p1",this.winner=null,this.p1.board.placeShip("carrier",4,"x"),this.p1.board.placeShip("battleship",12,"y"),this.p1.board.placeShip("cruiser",97,"x"),this.p1.board.placeShip("submarine",66,"y"),this.p1.board.placeShip("patrolBoat",39,"x"),this.p2.board.placeShip("carrier",4,"x"),this.p2.board.placeShip("battleship",12,"y"),this.p2.board.placeShip("cruiser",97,"x"),this.p2.board.placeShip("submarine",66,"y"),this.p2.board.placeShip("patrolBoat",39,"x")}var n,r;return n=t,(r=[{key:"renderBoards",value:function(){this.view.renderBoard(this.p1),this.view.renderBoard(this.p2)}},{key:"switchTurn",value:function(){this.turn="p1"===this.turn?"p2":"p1"}},{key:"checkWin",value:function(t){5===t.shipsSunk()&&(this.winner=this.turn)}},{key:"play",value:function(){for(;null==this.winner;)"p1"===this.turn?(this.p1.fireShot(this.p2),this.view.renderBoard(this.p2),this.checkWin(this.p2.board)):(this.p2.AI.randomShot(this.p1),this.checkWin(this.p1.board))}}])&&c(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();var l=n(379),p=n.n(l),f=n(795),h=n.n(f),y=n(569),d=n.n(y),b=n(565),m=n.n(b),v=n(216),A=n.n(v),g=n(589),C=n.n(g),w=n(756),S={};S.styleTagTransform=C(),S.setAttributes=m(),S.insert=d().bind(null,"head"),S.domAPI=h(),S.insertStyleElement=A(),p()(w.Z,S),w.Z&&w.Z.locals&&w.Z.locals;var x=new u;x.renderBoards(),x.play()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,